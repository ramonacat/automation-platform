name: build
on: [push]
jobs:
    build-dev:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Set up ALSA dev
              run: sudo apt-get install -y libasound2-dev

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - uses: actions-rs/toolchain@v1
              with:
                toolchain: stable
                default: true

            - uses: actions-rs/toolchain@v1
              with:
                toolchain: nightly
                default: false

            - uses: actions/cache@v3
              with:
                path: |
                    ~/.cargo/bin/
                    ~/.cargo/registry/index/
                    ~/.cargo/registry/cache/
                    ~/.cargo/git/db/
                    **/target/
                key: ${{ runner.os }}-cargo-v3-${{ hashFiles('**/Cargo.lock') }}
                restore-keys: ${{ runner.os }}-cargo-v3-

            -
              name: Cache Build state
              uses: actions/cache@v3
              with:
                path: .build/
                key: ${{ runner.os }}-buildstate-v3-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-buildstate-v3-

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.1'
                tools: composer, composer-require-checker

            - name: Setup composer-unused
              run: composer global require icanhazstring/composer-unused

            - name: Get composer cache directory
              working-directory: tools/build/
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}-${{ hashFiles('**/composer.json') }}
                restore-keys: ${{ runner.os }}-composer-

            - run: cargo udeps --help || cargo +nightly install cargo-udeps
            - run: cargo audit --version || cargo install cargo-audit

            - working-directory: tools/dependabot-config-checker/
              run: composer install

            - working-directory: tools/dependabot-config-checker/
              run: php bin/check.php

            - working-directory: tools/build/
              run: composer install

            - working-directory: tools/machine-info
              run: cargo build --release

            - run: php tools/build/bin/build.php --environment=github-actions build